{"ast":null,"code":"'use strict';\n\n/**\n * Randomize the order of the elements in a given array.\n * @param {Array} arr - The given array.\n * @param {Object} [options] - Optional configuration options.\n * @param {Boolean} [options.copy] - Sets if should return a shuffled copy of the given array. By default it's a falsy value.\n * @param {Function} [options.rng] - Specifies a custom random number generator.\n * @returns {Array}\n */\nfunction shuffle(arr, options) {\n  if (!Array.isArray(arr)) {\n    throw new Error('shuffle expect an array as parameter.');\n  }\n  options = options || {};\n  var collection = arr,\n    len = arr.length,\n    rng = options.rng || Math.random,\n    random,\n    temp;\n  if (options.copy === true) {\n    collection = arr.slice();\n  }\n  while (len) {\n    random = Math.floor(rng() * len);\n    len -= 1;\n    temp = collection[len];\n    collection[len] = collection[random];\n    collection[random] = temp;\n  }\n  return collection;\n}\n;\n\n/**\n * Pick one or more random elements from the given array.\n * @param {Array} arr - The given array.\n * @param {Object} [options] - Optional configuration options.\n * @param {Number} [options.picks] - Specifies how many random elements you want to pick. By default it picks 1.\n * @param {Function} [options.rng] - Specifies a custom random number generator.\n * @returns {Object}\n */\nshuffle.pick = function (arr, options) {\n  if (!Array.isArray(arr)) {\n    throw new Error('shuffle.pick() expect an array as parameter.');\n  }\n  options = options || {};\n  var rng = options.rng || Math.random,\n    picks = options.picks || 1;\n  if (typeof picks === 'number' && picks !== 1) {\n    var len = arr.length,\n      collection = arr.slice(),\n      random = [],\n      index;\n    while (picks && len) {\n      index = Math.floor(rng() * len);\n      random.push(collection[index]);\n      collection.splice(index, 1);\n      len -= 1;\n      picks -= 1;\n    }\n    return random;\n  }\n  return arr[Math.floor(rng() * arr.length)];\n};\n\n/**\n * Expose\n */\nmodule.exports = shuffle;","map":{"version":3,"names":["shuffle","arr","options","Array","isArray","Error","collection","len","length","rng","Math","random","temp","copy","slice","floor","pick","picks","index","push","splice","module","exports"],"sources":["/Users/edisipka/Desktop/Remote_conference_bingo/node_modules/shuffle-array/index.js"],"sourcesContent":["'use strict';\n\n/**\n * Randomize the order of the elements in a given array.\n * @param {Array} arr - The given array.\n * @param {Object} [options] - Optional configuration options.\n * @param {Boolean} [options.copy] - Sets if should return a shuffled copy of the given array. By default it's a falsy value.\n * @param {Function} [options.rng] - Specifies a custom random number generator.\n * @returns {Array}\n */\nfunction shuffle(arr, options) {\n\n  if (!Array.isArray(arr)) {\n    throw new Error('shuffle expect an array as parameter.');\n  }\n\n  options = options || {};\n\n  var collection = arr,\n      len = arr.length,\n      rng = options.rng || Math.random,\n      random,\n      temp;\n\n  if (options.copy === true) {\n    collection = arr.slice();\n  }\n\n  while (len) {\n    random = Math.floor(rng() * len);\n    len -= 1;\n    temp = collection[len];\n    collection[len] = collection[random];\n    collection[random] = temp;\n  }\n\n  return collection;\n};\n\n/**\n * Pick one or more random elements from the given array.\n * @param {Array} arr - The given array.\n * @param {Object} [options] - Optional configuration options.\n * @param {Number} [options.picks] - Specifies how many random elements you want to pick. By default it picks 1.\n * @param {Function} [options.rng] - Specifies a custom random number generator.\n * @returns {Object}\n */\nshuffle.pick = function(arr, options) {\n\n  if (!Array.isArray(arr)) {\n    throw new Error('shuffle.pick() expect an array as parameter.');\n  }\n\n  options = options || {};\n\n  var rng = options.rng || Math.random,\n      picks = options.picks || 1;\n\n  if (typeof picks === 'number' && picks !== 1) {\n    var len = arr.length,\n        collection = arr.slice(),\n        random = [],\n        index;\n\n    while (picks && len) {\n      index = Math.floor(rng() * len);\n      random.push(collection[index]);\n      collection.splice(index, 1);\n      len -= 1;\n      picks -= 1;\n    }\n\n    return random;\n  }\n\n  return arr[Math.floor(rng() * arr.length)];\n};\n\n/**\n * Expose\n */\nmodule.exports = shuffle;\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAOA,CAACC,GAAG,EAAEC,OAAO,EAAE;EAE7B,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,GAAG,CAAC,EAAE;IACvB,MAAM,IAAII,KAAK,CAAC,uCAAuC,CAAC;EAC1D;EAEAH,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAEvB,IAAII,UAAU,GAAGL,GAAG;IAChBM,GAAG,GAAGN,GAAG,CAACO,MAAM;IAChBC,GAAG,GAAGP,OAAO,CAACO,GAAG,IAAIC,IAAI,CAACC,MAAM;IAChCA,MAAM;IACNC,IAAI;EAER,IAAIV,OAAO,CAACW,IAAI,KAAK,IAAI,EAAE;IACzBP,UAAU,GAAGL,GAAG,CAACa,KAAK,EAAE;EAC1B;EAEA,OAAOP,GAAG,EAAE;IACVI,MAAM,GAAGD,IAAI,CAACK,KAAK,CAACN,GAAG,EAAE,GAAGF,GAAG,CAAC;IAChCA,GAAG,IAAI,CAAC;IACRK,IAAI,GAAGN,UAAU,CAACC,GAAG,CAAC;IACtBD,UAAU,CAACC,GAAG,CAAC,GAAGD,UAAU,CAACK,MAAM,CAAC;IACpCL,UAAU,CAACK,MAAM,CAAC,GAAGC,IAAI;EAC3B;EAEA,OAAON,UAAU;AACnB;AAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,OAAO,CAACgB,IAAI,GAAG,UAASf,GAAG,EAAEC,OAAO,EAAE;EAEpC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,GAAG,CAAC,EAAE;IACvB,MAAM,IAAII,KAAK,CAAC,8CAA8C,CAAC;EACjE;EAEAH,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAEvB,IAAIO,GAAG,GAAGP,OAAO,CAACO,GAAG,IAAIC,IAAI,CAACC,MAAM;IAChCM,KAAK,GAAGf,OAAO,CAACe,KAAK,IAAI,CAAC;EAE9B,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,CAAC,EAAE;IAC5C,IAAIV,GAAG,GAAGN,GAAG,CAACO,MAAM;MAChBF,UAAU,GAAGL,GAAG,CAACa,KAAK,EAAE;MACxBH,MAAM,GAAG,EAAE;MACXO,KAAK;IAET,OAAOD,KAAK,IAAIV,GAAG,EAAE;MACnBW,KAAK,GAAGR,IAAI,CAACK,KAAK,CAACN,GAAG,EAAE,GAAGF,GAAG,CAAC;MAC/BI,MAAM,CAACQ,IAAI,CAACb,UAAU,CAACY,KAAK,CAAC,CAAC;MAC9BZ,UAAU,CAACc,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAC3BX,GAAG,IAAI,CAAC;MACRU,KAAK,IAAI,CAAC;IACZ;IAEA,OAAON,MAAM;EACf;EAEA,OAAOV,GAAG,CAACS,IAAI,CAACK,KAAK,CAACN,GAAG,EAAE,GAAGR,GAAG,CAACO,MAAM,CAAC,CAAC;AAC5C,CAAC;;AAED;AACA;AACA;AACAa,MAAM,CAACC,OAAO,GAAGtB,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}